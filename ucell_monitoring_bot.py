import telebot
from telebot import types

bot = telebot.TeleBot('7918506920:AAFUyc3GoP3TP7MBO3TQS0eFv1yz6tlRPQg')

sai_alerts = {
    'alert1': {'name': 'UserPackagesIntegerOverflow',
               'description': '‚ú® <b>alertname:</b> = UserPackagesIntegerOverflow \nenvironment = prod \ngroup = business-metrics \ninstance = mon.iti.domain:9399\njob = sql-exporter\nseverity = critical\nAnnotations\nsummary = More than 1 integer overflow in user_packages\n _______________\n<b>–ü—Ä–∏—á–∏–Ω–∞: –±–∏–ª–ª–∏–Ω–≥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç NaN –≤ –∫–≤–æ—Ç–∞—Ö</b>.'},
    'alert2': {'name': 'HostClockNotSynchronising',
               'description': '‚ú® <b>alertname:</b> = HostClockNotSynchronising\nenvironment = prod \ninstance = app-5.prod:9100\njob = node_exporter\nseverity = warning\nAnnotations\ndescription = Clock not synchronising. Ensure NTP is\nconfigured on this host. VALUE = 0 LABELS =\nmap[environment:prod instance:app-5.prod:9100\njob:node_exporter]\nsummary = Host clock not synchronising (instance app-5.prod:9100)\n_______________________\n<b>–ù–µ–æ–±—Ö–æ–¥–∏–º–æ–µ —Ä–µ—à–µ–Ω–∏–µ: –∫–ª–∞—Å—Ç–µ—Ä VMware —Å–¥–µ–ª–∞—Ç—å –±–µ–∑ –æ–≤–µ—Ä–ø—Ä–æ–≤–∏–∑–∏–æ–Ω–∏–Ω–≥–∞</b>..'},
    'alert3': {'name': 'HighCountOfErrorsOnEventProcessor',
               'description': '‚ú® <b>alertname:</b> = HighCountOfErrorsOnEventProcessor\naction = failed_to_find_appmetrica_device_id_in_clickhouse\ngroup = eventer\nseverity = critical\nAnnotations\nsummary = High count of errors (424.8) on event-processor\nmap[action:failed_to_find_appmetrica_device_id_in_clickhouse].'},
    'alert4': {'name': 'UserPackagesIntegerOverflow',
               'description': '‚ú® <b>alertname:</b> = UserPackagesIntegerOverflow\nenvironment = prod\ngroup = business-metrics\ninstance = mon.iti.domain:9399\njob = sql-exporter\nseverity = critical\nAnnotations\nsummary = More than 1 integer overflow in user_packages.'},
    'alert5': {'name': 'PromtailIsDown',
               'description': '‚ú® <b>alertname:</b> = PromtailIsDown\nenvironment = prod\ninstance = app-1.prod:9080\njob = promtail\nseverity = moderate\nAnnotations\ndescription = app-1.prod:9080 has been down more than 60s (job promtail).\ntitle = app-1.prod:9080 is down\n_________________\n–°–µ—Ç–µ–≤–∞—è/–º–∏–≥—Ä–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª–∫–∏ Vmware.'},
    'alert6': {'name': 'ApiV1.14SimActivationRegistrationPost400Low',
               'description': '‚ú® <b>alertname:</b> = ApiV1.14SimActivationRegistrationPost400Low\nenv = gateways\nfilename = /var/log/nginx/api-ma.ucell.uz-access.log\nhostname = gw-1.prod\njob = nginx-access\nmessage = 400 errors are more than 20 per minute on url:\n/api/v1.14/sim/activation/registration\nseverity = low\n.'},
    'alert7': {'name': 'ProcessExporterIsDown',
               'description': '‚ú® <b>alertname:</b> = ProcessExporterIsDown\nenvironment = prod\ninstance = db-2.prod:9256\njob = process_exporter\nseverity = moderate\nAnnotations\ndescription = db-2.prod:9256 has been down more than 60s (job process_exporter).\ntitle = db-2.prod:9256 is down\n \n.'},
    'alert8': {'name': '–û—à–∏–±–∫–∏ –≤—Ö–æ–¥–∞ –≤ SAI',
               'description': '‚ú® <b>alertname:</b> –û–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∞–ª–µ—Ä—Ç–∞ 8, —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å –æ—à–∏–±–∫–∞–º–∏ –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É SAI.'},
    'alert9': {'name': '–ü—Ä–æ–±–ª–µ–º—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö SAI',
               'description': '‚ú® <b>alertname:</b> –û–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∞–ª–µ—Ä—Ç–∞ 9, —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å –ø—Ä–æ–±–ª–µ–º–∞–º–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –≤ SAI.'},
    'alert10': {'name': '–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –≤ SAI',
                'description': '‚ú® <b>alertname:</b> –û–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∞–ª–µ—Ä—Ç–∞ 10, —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ–º —Ä–∞–±–æ—Ç—ã –≤–∞–∂–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ –≤ SAI.'},
}

vas_alerts = {
    'alert1': {'name': '–ü—Ä–æ–±–ª–µ–º—ã —Å —É—Å–ª—É–≥–∞–º–∏ VAS',
               'description': '‚ú® <b>–ê–ª–µ—Ä—Ç 1:</b> –≠—Ç–æ—Ç –∞–ª–µ—Ä—Ç —Å–æ–æ–±—â–∞–µ—Ç –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å —É—Å–ª—É–≥–∞–º–∏ VAS. –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ –¥–µ–π—Å—Ç–≤–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –ø—Ä–µ–¥–ø—Ä–∏–Ω—è—Ç—å.'},
    'alert2': {'name': '–°–±–æ–∏ –≤ —Å–∏—Å—Ç–µ–º–∞—Ö VAS',
               'description': '‚ú® <b>–ê–ª–µ—Ä—Ç 2:</b> –≠—Ç–æ—Ç –∞–ª–µ—Ä—Ç —Å–æ–æ–±—â–∞–µ—Ç –æ —Å–±–æ—è—Ö –≤ —Å–∏—Å—Ç–µ–º–∞—Ö VAS. –¢—Ä–µ–±—É–µ—Ç—Å—è –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã.'},
    'alert3': {'name': '–ü–æ—Ç–µ—Ä—è –¥–∞–Ω–Ω—ã—Ö –≤ VAS',
               'description': '‚ú® <b>–ê–ª–µ—Ä—Ç 3:</b> –≠—Ç–æ—Ç –∞–ª–µ—Ä—Ç —Å–æ–æ–±—â–∞–µ—Ç –æ –ø–æ—Ç–µ—Ä–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Å–µ—Ä–≤–∏—Å–∞—Ö VAS. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ –∞–Ω–∞–ª–∏–∑ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ.'},
    'alert4': {'name': '–ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º VAS',
               'description': '‚ú® <b>–ê–ª–µ—Ä—Ç 4:</b> –û–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∞–ª–µ—Ä—Ç–∞ 4, —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å –ø—Ä–æ–±–ª–µ–º–∞–º–∏ —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ —Å–µ—Ä–≤–∏—Å–∞–º VAS.'},
    'alert5': {'name': '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –≤ VAS',
               'description': '‚ú® <b>–ê–ª–µ—Ä—Ç 5:</b> –û–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∞–ª–µ—Ä—Ç–∞ 5, —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é –≤ —Å–∏—Å—Ç–µ–º–µ VAS.'},
    'alert6': {'name': '–†–∏—Å–∫–∏ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ VAS',
               'description': '‚ú® <b>–ê–ª–µ—Ä—Ç 6:</b> –û–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∞–ª–µ—Ä—Ç–∞ 6, —É–∫–∞–∑—ã–≤–∞—é—â–µ–µ –Ω–∞ —Ä–∏—Å–∫–∏ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ —Å–∏—Å—Ç–µ–º—ã VAS.'},
    'alert7': {'name': '–û—à–∏–±–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ VAS',
               'description': '‚ú® <b>–ê–ª–µ—Ä—Ç 7:</b> –û–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∞–ª–µ—Ä—Ç–∞ 7, —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å –æ—à–∏–±–∫–∞–º–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ VAS.'},
    'alert8': {'name': '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã VAS',
               'description': '‚ú® <b>–ê–ª–µ—Ä—Ç 8:</b> –û–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∞–ª–µ—Ä—Ç–∞ 8, —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º–∏ –ø—Ä–æ–±–ª–µ–º–∞–º–∏ –≤ VAS.'},
    'alert9': {'name': '–ü—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é VAS',
               'description': '‚ú® <b>–ê–ª–µ—Ä—Ç 9:</b> –û–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∞–ª–µ—Ä—Ç–∞ 9, —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é –≤ VAS.'},
    'alert10': {'name': '–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –≤ VAS',
                'description': '‚ú® <b>–ê–ª–µ—Ä—Ç 10:</b> –û–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∞–ª–µ—Ä—Ç–∞ 10, —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ–º —Ä–∞–±–æ—Ç—ã –≤–∞–∂–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ –≤ VAS.'},
}

def create_alert_buttons(alerts, callback_prefix):
    markup = types.InlineKeyboardMarkup()
    for alert_key, alert_value in alerts.items():
        alert_button = types.InlineKeyboardButton(alert_value['name'], callback_data=f'{callback_prefix}_{alert_key}')
        markup.add(alert_button)
    back_button = types.InlineKeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data='main_menu')
    markup.add(back_button)
    return markup


@bot.callback_query_handler(func=lambda call: call.data == 'search_alerts')
def search_alerts(call):
    msg = bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ –∞–ª–µ—Ä—Ç–∞–º:")
    bot.register_next_step_handler(msg, handle_search_query)

def handle_search_query(message):
    query = message.text.lower()
    results = []

    for alert_key, alert_value in sai_alerts.items():
        if query in alert_value['name'].lower() or query in alert_value['description'].lower():
            results.append(f"sai_alert_{alert_key}")

    for alert_key, alert_value in vas_alerts.items():
        if query in alert_value['name'].lower() or query in alert_value['description'].lower():
            results.append(f"vas_alert_{alert_key}")

    if results:
        markup = types.InlineKeyboardMarkup()
        for result in results:
            alert_button = types.InlineKeyboardButton(result, callback_data=result)
            markup.add(alert_button)

        bot.send_message(
            message.chat.id,
            "–í–æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞:",
            reply_markup=markup
        )
    else:
        bot.send_message(
            message.chat.id,
            "–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –¥—Ä—É–≥–æ–π –∑–∞–ø—Ä–æ—Å."
        )

@bot.message_handler(commands=['start', 'main'])
def main_menu(message):
    markup = types.InlineKeyboardMarkup()

    sai_alerts_button = types.InlineKeyboardButton('–ê–ª–µ—Ä—Ç—ã –æ—Ç–¥–µ–ª–∞ SAI', callback_data='sai_alerts')
    vas_alerts_button = types.InlineKeyboardButton('–ê–ª–µ—Ä—Ç—ã –æ—Ç–¥–µ–ª–∞ VAS', callback_data='vas_alerts')
    search_alerts_button = types.InlineKeyboardButton('üîç –ü–æ–∏—Å–∫ –ø–æ –∞–ª–µ—Ä—Ç–∞–º', callback_data='search_alerts')

    system_info_button = types.InlineKeyboardButton('üñ• –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ', callback_data='system_info')
    tech_support_button = types.InlineKeyboardButton('üìû –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞', callback_data='tech_support')
    stats_button = types.InlineKeyboardButton('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∞–ª–µ—Ä—Ç–∞–º', callback_data='alert_stats')

    markup.add(sai_alerts_button, vas_alerts_button, search_alerts_button)
    markup.add(system_info_button, tech_support_button, stats_button)

    bot.send_message(
        message.chat.id,
        f'üëã <b>–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name} {message.from_user.last_name}, —Ç–µ–±—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–æ—Ç —Å –±–∞–∑–æ–π –≤—Å–µ—Ö –∞–ª–µ—Ä—Ç–æ–≤ –∫–æ–º–ø–∞–Ω–∏–∏ Ucell!</b>\n\n'
        '–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ —Ä–∞–∑–¥–µ–ª–æ–≤ –Ω–∏–∂–µ:',
        parse_mode='HTML',
        reply_markup=markup
    )

@bot.callback_query_handler(func=lambda call: call.data == 'sai_alerts')
def show_sai_alerts(call):
    markup = create_alert_buttons(sai_alerts, 'sai_alert')

    bot.edit_message_text(
        '–í—ã–±–µ—Ä–∏—Ç–µ –∞–ª–µ—Ä—Ç –¥–ª—è –æ—Ç–¥–µ–ª–∞ SAI:',
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
        parse_mode='HTML',
        reply_markup=markup
    )

@bot.callback_query_handler(func=lambda call: call.data.startswith('sai_alert_'))
def show_sai_alert_details(call):
    alert_key = call.data.split('_')[2]
    alert_details = sai_alerts[alert_key]
    markup = types.InlineKeyboardMarkup()
    back_button = types.InlineKeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data='sai_alerts')
    markup.add(back_button)

    bot.edit_message_text(
        alert_details['description'],
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
        parse_mode='HTML',
        reply_markup=markup
    )

@bot.callback_query_handler(func=lambda call: call.data == 'vas_alerts')
def show_vas_alerts(call):
    markup = create_alert_buttons(vas_alerts, 'vas_alert')

    bot.edit_message_text(
        '–í—ã–±–µ—Ä–∏—Ç–µ –∞–ª–µ—Ä—Ç –¥–ª—è –æ—Ç–¥–µ–ª–∞ VAS:',
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
        parse_mode='HTML',
        reply_markup=markup
    )

@bot.callback_query_handler(func=lambda call: call.data.startswith('vas_alert_'))
def show_vas_alert_details(call):
    alert_key = call.data.split('_')[2]
    alert_details = vas_alerts[alert_key]
    markup = types.InlineKeyboardMarkup()
    back_button = types.InlineKeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data='vas_alerts')
    markup.add(back_button)

    bot.edit_message_text(
        alert_details['description'],
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
        parse_mode='HTML',
        reply_markup=markup
    )

@bot.callback_query_handler(func=lambda call: call.data == 'main_menu')
def back_to_main_menu(call):
    markup = types.InlineKeyboardMarkup()

    sai_alerts_button = types.InlineKeyboardButton('–ê–ª–µ—Ä—Ç—ã –æ—Ç–¥–µ–ª–∞ SAI', callback_data='sai_alerts')
    vas_alerts_button = types.InlineKeyboardButton('–ê–ª–µ—Ä—Ç—ã –æ—Ç–¥–µ–ª–∞ VAS', callback_data='vas_alerts')
    search_alerts_button = types.InlineKeyboardButton('üîç –ü–æ–∏—Å–∫ –ø–æ –∞–ª–µ—Ä—Ç–∞–º', callback_data='search_alerts')

    system_info_button = types.InlineKeyboardButton('üñ• –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ', callback_data='system_info')
    tech_support_button = types.InlineKeyboardButton('üìû –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞', callback_data='tech_support')
    stats_button = types.InlineKeyboardButton('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∞–ª–µ—Ä—Ç–∞–º', callback_data='alert_stats')

    markup.add(sai_alerts_button, vas_alerts_button, search_alerts_button)
    markup.add(system_info_button, tech_support_button, stats_button)

    bot.edit_message_text(
        f'üëã <b>–ü—Ä–∏–≤–µ—Ç {call.from_user.first_name} {call.from_user.last_name}, —Ç–µ–±—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–æ—Ç —Å –±–∞–∑–æ–π –≤—Å–µ—Ö –∞–ª–µ—Ä—Ç–æ–≤ –∫–æ–º–ø–∞–Ω–∏–∏ Ucell!</b>\n\n'
        '–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ —Ä–∞–∑–¥–µ–ª–æ–≤ –Ω–∏–∂–µ:',
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
        parse_mode='HTML',
        reply_markup=markup
    )

bot.polling(none_stop=True)